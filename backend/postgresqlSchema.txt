CREATE TABLE wholesalers (
    wholesaler_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    gst_no VARCHAR(20) UNIQUE NOT NULL,
    address TEXT,
    contact VARCHAR(15),
    email VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


-- Create ENUM for payment status
CREATE TYPE payment_status_enum AS ENUM ('Paid', 'Unpaid', 'Partial');

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    invoice_no VARCHAR(20) UNIQUE NOT NULL,
    invoice_date DATE NOT NULL DEFAULT CURRENT_DATE,
    total_amount NUMERIC(12,2) CHECK (total_amount >= 0) NOT NULL,
    payment_status payment_status_enum DEFAULT 'Unpaid' NOT NULL,
    payment_date DATE,
    wholesaler_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT fk_wholesaler
        FOREIGN KEY (wholesaler_id)
        REFERENCES wholesalers(wholesaler_id)
        ON DELETE CASCADE
);


CREATE TABLE medicine_stock (
    medicine_id SERIAL PRIMARY KEY,
    invoice_id INT NOT NULL,
    medicine_name VARCHAR(100) NOT NULL,
    brand_name VARCHAR(100),
    stock_quantity INT CHECK (stock_quantity > 0),
    mfg_date DATE,
    expiry_date DATE,
    purchase_price NUMERIC(10,2) CHECK (purchase_price >= 0),
    mrp NUMERIC(10,2) CHECK (mrp >= 0),
    batch_no VARCHAR(20),
    packed_type VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT fk_invoice
        FOREIGN KEY (invoice_id)
        REFERENCES invoices(invoice_id)
        ON DELETE CASCADE
);

/------------------------------------------------/
CREATE OR REPLACE FUNCTION update_timestamp()
RETURNS TRIGGER AS $$
BEGIN
   NEW.updated_at = CURRENT_TIMESTAMP;
   RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Apply to each table
CREATE TRIGGER trg_update_wholesalers
BEFORE UPDATE ON wholesalers
FOR EACH ROW EXECUTE FUNCTION update_timestamp();

CREATE TRIGGER trg_update_invoices
BEFORE UPDATE ON invoices
FOR EACH ROW EXECUTE FUNCTION update_timestamp();

CREATE TRIGGER trg_update_medicine_stock
BEFORE UPDATE ON medicine_stock
FOR EACH ROW EXECUTE FUNCTION update_timestamp();

/----------------------------------------------------/

INSERT INTO wholesalers (name, gst_no, address, contact, email)
VALUES
('Sunrise Remedies', '24SRR6543E5Z3', 'GIDC Estate, Ahmedabad - 380015', '9090909090', 'info@sunriseremedies.in'),
('Medico Wholesale Hub', '29MWH4321D4Z8', '33 MG Road, Bangalore - 560001', '9901122334', 'support@medicowholesalehub.in'),
('CureMed Pharma', '19CMP8765C3Z2', '56 Salt Lake Sector 3, Kolkata - 700091', '9123456780', 'info@curemedpharma.com'),
('Lifeline Distributors', '07LLD5678B2Z7', 'A-23 Connaught Place, Delhi - 110001', '9812345678', 'sales@lifelinedistributors.in'),
('HealthMart Pharma', '27HMP1234A1Z5', '12 Sector Road, Mumbai, MH - 400001', '9876543210', 'contact@healthmartpharma.com');


/------------------------------------------------------------/
INSERT INTO invoices (invoice_no, invoice_date, total_amount, payment_status, payment_date, wholesaler_id)
VALUES 
('LLD-002', CURRENT_DATE, 36.00 + 30.00 + 26.00 + 12.00 + 24.00, 'Unpaid', NULL, 1),
('LLD-001', CURRENT_DATE, 22.00 + 28.00 + 8.00 + 14.00 + 16.00, 'Unpaid', NULL, 1),
('HMP-001', CURRENT_DATE, 12.00 + 45.00 + 6.00 + 18.00 + 10.00, 'Unpaid', NULL, 2),
('HMP-002', CURRENT_DATE, 28.00 + 16.00 + 20.00 + 18.00 + 12.00, 'Unpaid', NULL, 2),
('CMP-001', CURRENT_DATE, 34.00 + 48.00 + 20.00 + 16.00 + 10.00, 'Unpaid', NULL, 3);

/------------------------------------------------------/

INSERT INTO medicine_stock (invoice_id, medicine_name, brand_name, stock_quantity, mfg_date, expiry_date, purchase_price, mrp, batch_no, packed_type)
VALUES
-- Invoice 1
(1, 'Clopidogrel', 'Clopivas', 50, '2024-01-01', '2025-12-01', 36, 60, 'CL234A', 'Strip'),
(1, 'Telmisartan', 'Telma', 75, '2024-03-01', '2026-03-01', 30, 50, 'TM345B', 'Strip'),
(1, 'Montelukast', 'Montair', 65, '2024-02-01', '2026-02-01', 26, 40, 'MT456C', 'Strip'),
(1, 'Alprazolam', 'Alprax', 100, '2023-12-01', '2025-12-01', 12, 20, 'AP567D', 'Strip'),
(1, 'Glimepiride', 'Amaryl', 90, '2024-04-01', '2026-04-01', 24, 38, 'GM678E', 'Strip'),

-- Invoice 2
(2, 'Metformin', 'Glycomet', 80, '2024-06-01', '2026-01-01', 22, 35, 'MF234F', 'Strip'),
(2, 'Atorvastatin', 'Lipicure', 60, '2024-01-01', '2026-07-01', 28, 50, 'AT345G', 'Strip'),
(2, 'Levocetirizine', 'Levocet', 90, '2024-04-01', '2025-12-01', 8, 12, 'LV456H', 'Strip'),
(2, 'Diclofenac', 'Voveran', 100, '2024-03-01', '2026-03-01', 14, 25, 'DC567I', 'Strip'),
(2, 'Pantoprazole', 'Pantocid', 110, '2024-02-01', '2026-06-01', 16, 28, 'PT678J', 'Strip'),

-- Invoice 3
(3, 'Paracetamol', 'Crocin', 100, '2024-05-01', '2026-05-01', 12, 20, 'PC123A', 'Strip'),
(3, 'Amoxicillin', 'Mox 500', 50, '2024-08-01', '2026-08-01', 45, 70, 'AM456B', 'Strip'),
(3, 'Cetirizine', 'Cetzine', 200, '2023-11-01', '2025-11-01', 6, 10, 'CZ789C', 'Strip'),
(3, 'Ibuprofen', 'Brufen', 150, '2024-04-01', '2026-04-01', 18, 30, 'IB321D', 'Strip'),
(3, 'Omeprazole', 'Omez', 120, '2024-06-01', '2026-06-01', 10, 18, 'OM654E', 'Strip'),

-- Invoice 4
(4, 'Azithromycin', 'Azithral', 60, '2024-03-01', '2026-03-01', 28, 45, 'AZ001B', 'Strip'),
(4, 'Dolo 650', 'Dolo', 200, '2024-01-01', '2026-01-01', 16, 25, 'DL650C', 'Strip'),
(4, 'Rabeprazole', 'Razo', 100, '2024-02-01', '2026-02-01', 20, 35, 'RP100D', 'Strip'),
(4, 'Losartan', 'Losar', 90, '2023-12-01', '2025-12-01', 18, 28, 'LS789E', 'Strip'),
(4, 'Metronidazole', 'Flagyl', 150, '2024-05-01', '2026-05-01', 12, 22, 'FG456F', 'Strip'),

-- Invoice 5
(5, 'Esomeprazole', 'Nexpro', 70, '2024-05-01', '2026-05-01', 34, 55, 'ES123F', 'Strip'),
(5, 'Rosuvastatin', 'Crestor', 55, '2024-01-01', '2026-01-01', 48, 75, 'RS234G', 'Strip'),
(5, 'Lisinopril', 'Zestril', 65, '2023-11-01', '2025-11-01', 20, 32, 'LS345H', 'Strip'),
(5, 'Fluconazole', 'Forcan', 90, '2024-03-01', '2026-03-01', 16, 27, 'FC456I', 'Strip'),
(5, 'Loratadine', 'Claritin', 100, '2024-02-01', '2026-02-01', 10, 18, 'LR567J', 'Strip');

